## dev------------------------------------------------------
## 项目中静态资源的路径
#spring.mvc.static-path-pattern=static/**
## 项目静态资源映射的硬盘路径
#spring.resources.static-locations=file:E:/test
#
## 在指定目录下生成日志文件 可以是绝对路径,也可以是磁盘路径
#logging.file.path=E:\\test\\
#
## 自定义
## Excel问题模板文件
#file.file.questionTemplateLocalPath=E:\\test\\file\\
## 临时文件
#file.temp.tempPathLocal=E:\\test\\temp\\
## 图片的硬盘位置，用于上传图片时使用
#file.img.imagePathLocal=E:\\test\\images\\
## 图片的访问地址，用于将图片地址保存到数据库时使用
#file.img.imagePathWeb=http://127.0.0.1/exercise/static/images/
#
## 本地测试使用的MySQL URL
#spring.datasource.url=jdbc:mysql:///exercise?Unicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
#
## 本地测试redis IP地址
#spring.redis.host=
## wx
#wx.appid=
#wx.secret=
## 打开热更新
#spring.devtools.restart.enabled=true

# ----------------------------------------------------
# ----------------------------------------------------
# ----------------------------------------------------

# Linux----------------------------------------------------
# 项目中静态资源的路径
spring.mvc.static-path-pattern=static/**
# 项目静态资源映射的硬盘路径
spring.resources.static-locations=file:/usr/my_file/pro_static/
# 日志路径
logging.file.path=/usr/my_file/pro_static
# 自定义
# Excel问题模板文件
file.file.questionTemplateLocalPath=/usr/my_file/pro_static/file/
# 临时文件
file.temp.tempPathLocal=/usr/my_file/pro_static/temp/
# 图片的硬盘位置，用于上传图片时使用
file.img.imagePathLocal=/usr/my_file/pro_static/images/
# 图片的访问地址，用于将图片地址保存到数据库时使用
file.img.imagePathWeb=http://graceful.top/exercise/static/images/
# 在服务器上的MySQL访问地址
spring.datasource.url=jdbc:mysql:///exercise?Unicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
# 服务器上redis访问地址
spring.redis.host=127.0.0.1
# wx
wx.appid=
wx.secret=





# 设置端口
server.port=80
# 项目访问路径
server.servlet.context-path=/exercise
# 日志
# 设置指定包下的输出级别
logging.level.com.one.exercise=info

# 数据源
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## 数据库配置
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
##  Hikari 连接池配置
## 最小空闲连接数量
spring.datasource.hikari.minimum-idle=5
## 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout=180000
## 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size=10
## 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit=true
## 连接池母子
spring.datasource.hikari.pool-name=MyHikariCP
## 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime=1800000
## 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# MyBatis
# 开启驼峰命名
mybatis.configuration.map-underscore-to-camel-case=true
mapper.identity=MYSQL
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.one.exercise.pojo
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# Redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
#spring.redis.host=
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=30
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
spring.redis.lettuce.pool.max-wait=5000ms
#spring.redis.lettuce.pool.max-wait=1ms
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=5
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.shutdown-timeout=100ms
# 连接超时时间（毫秒）默认2000
spring.redis.timeout=10000

#邮件发送配置
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.qq.com
spring.mail.username=80507178@qq.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.port=465

#文件上传
# 上传文件总的最大值
spring.servlet.multipart.max-request-size=100MB
# 单个文件的最大值
spring.servlet.multipart.max-file-size=10MB